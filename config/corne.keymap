/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

/ {
    behaviors {
        hrm_r: hrm_r {
            compatible = "zmk,behavior-hold-tap";
            label = "HRM_R";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
            quick-tap-ms = <175>;
            flavor = "tap-preferred";
            hold-trigger-on-release;
            hold-trigger-key-positions = <12 0 24 25 1 13 14 2 26 15 27 3 4 5 17 16 28 29 36 37 38 39 40 41>;
        };

        hrm_l: hrm_l {
            compatible = "zmk,behavior-hold-tap";
            label = "HRM_L";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
            quick-tap-ms = <175>;
            flavor = "tap-preferred";
            hold-trigger-on-release;
            hold-trigger-key-positions = <36 37 38 39 40 41 6 7 8 9 10 11 18 19 20 21 22 23 30 31 32 33 34 35 39 40 41>;
        };
    };

    macros {
        hyper: hyper {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LC(LS(LA(LEFT_COMMAND)))>;
            label = "HYPER";
        };
    };

    combos {
        compatible = "zmk,combos";

        lpar {
            bindings = <&mt LESS_THAN LEFT_PARENTHESIS>;
            key-positions = <19 20>;
        };

        rpar {
            bindings = <&mt GT RPAR>;
            key-positions = <20 21>;
        };

        lbrack {
            bindings = <&mt LEFT_BRACKET LEFT_BRACE>;
            key-positions = <31 32>;
        };

        lbrack {
            bindings = <&mt RIGHT_BRACKET RIGHT_BRACE>;
            key-positions = <32 33>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BKSP |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            display-name = "Base";
            bindings = <
&kp TAB                       &kp Q                &kp W              &kp E                  &kp R            &kp T      &kp Y    &kp U           &kp I                         &kp O              &kp P                    &none
&kp LC(LS(LA(LEFT_COMMAND)))  &hrm_l LEFT_SHIFT A  &hrm_l LEFT_ALT S  &hrm_l LEFT_COMMAND D  &hrm_l RCTRL F   &kp G      &kp H    &hrm_r RCTRL J  &hrm_r RIGHT_COMMAND K        &hrm_r LEFT_ALT L  &hrm_r RIGHT_SHIFT SEMI  &kp ENTER
&caps_word                    &kp Z                &kp X              &kp C                  &kp V            &kp B      &kp N    &kp M           &kp COMMA                     &kp DOT            &kp FSLH                 &none
                                                                      &kp LSHFT              &lt 1 BACKSPACE  &kp ESC    &kp RET  &lt 2 SPACE     &kp LC(LS(LA(LEFT_COMMAND)))
            >;
        };

        raise_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BKSP |
            // | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
            // | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            display-name = "Raise";
            bindings = <
&kp TAB    &kp APOSTROPHE   &kp LESS_THAN  &kp GREATER_THAN  &kp DOUBLE_QUOTES     &kp PERIOD    &kp AMPERSAND  &kp GRAVE   &kp LEFT_BRACKET      &kp RIGHT_BRACKET      &kp PERCENT   &kp BSPC
&kp LCTRL  &kp EXCLAMATION  &kp PLUS       &kp MINUS         &kp EQUAL             &kp HASH      &kp PIPE       &kp COLON   &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp QUESTION  &kp ENTER
&kp LSHFT  &none            &kp SLASH      &kp ASTERISK      &kp NON_US_BACKSLASH  &kp TILDE     &kp UNDER      &kp DOLLAR  &kp LBRC              &kp RBRC               &kp AT_SIGN   &trans
                                           &kp LGUI          &trans                &kp SPACE     &kp RET        &trans      &trans
            >;
        };

        lower_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BKSP |
            // | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
            // | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            display-name = "Lower";
            bindings = <
&kp TAB     &kp N1        &kp N2        &kp N3        &kp N4        &kp N5          &kp N6    &kp N7    &kp N8  &kp N9     &kp N0  &kp BSPC
&trans      &kp LEFT_ALT  &kp LC(S)     &kp MINUS     &kp PIPE      &kp LC(D)       &kp LEFT  &kp DOWN  &kp UP  &kp RIGHT  &trans  &trans
&bt BT_CLR  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4    &trans    &trans    &trans  &trans     &trans  &trans
                                        &trans        &trans        &trans          &trans    &trans    &trans
            >;
        };

        workflow {
            display-name = "Lower";
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &none   &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
                        &trans  &trans  &trans    &trans  &trans  &trans
            >;
        };
    };
};
